<?xml version="1.0" encoding="ISO-8859-1"?>
<!-- CVS History
	$Log: setenv.xml,v $
	Revision 1.5  2007/12/20 17:15:14  beal6226
	Adaptation pour Java 1.4 et Eclipse 3.2

	Revision 1.4  2007/12/18 13:13:27  beal6226
	Version G3R2C0

	Revision 1.2  2007/08/10 12:16:07  beal6226
	Modif pour permettre la compilation de jar GWT avec les sources

	Revision 1.1  2007/05/25 12:27:21  beal6226
	Exemple d'utilisation de GWT avec :
	- Un menu déroulant qui fait apparaitre une popup
	- Un bouton qui fait apparaitre un hello world
	- Des champs de saisie qui modifient dynamiquement un tableau de données.
	- Une utilisation de GWT RPC pour récupérer des données côté serveur (après, c'est bouchonné, il n'y a pas de SGBD).

	Revision 1.3  2006/11/02 13:54:48  beal6226
	Synchronisation avec referentiel plateforme Eclipse

	Revision 1.1  2006/10/10 08:10:37  ajta5630
	Intérgration dans la barre d'outils et le menu du workbench. Intégration de l'aide

	Revision 1.1  2006/03/20 16:31:35  beal6226
	Initial plugin version

	Revision 1.41  2006/03/14 16:57:01  beal6226
	Nouvelle version de PMD et des règles Clara, directement dans les librairies du toolkit.
	Attention, sur le palier S2D2, supprimer les anciens fichiers PMD dans Window/Preferences/Ant/Runtime

	Revision 1.40  2006/03/10 15:56:03  beal6226
	Version G3R0C0

	Revision 1.39  2006/03/06 13:41:19  beal6226
	Le classpath pour wsdl2java doit être positionné dans le define_axis
	dès la définition de la tâche, car l'élément imbriqué classpath n'est pas pris en compte.

	Revision 1.38  2006/03/01 17:01:44  beal6226
	Modification du versant.classpath pour mettre les classes à enhancer en premier

	Revision 1.37  2006/02/23 17:40:20  beal6226
	Regroupement des classpath et réorganisation des librairies dans lib

	Revision 1.36  2006/02/23 17:12:40  beal6226
	Regroupement des classpath et réorganisation des librairies dans lib

	Revision 1.35  2006/02/23 13:28:14  beal6226
	Suppression de la dépendance du toolkit à jonas

	Revision 1.34  2006/01/24 10:50:08  yrka8220
	Ajout du module rar

	Revision 1.33  2006/01/18 17:03:49  beal6226
	Utilisation de la tâche standard serverdeploy de Jonas et de jonas.server.name

	Revision 1.32  2006/01/18 16:59:36  beal6226
	Ajout option jonas.server.name

	Revision 1.31  2005/12/16 12:37:14  beal6226
	versant.home devient voaplugin.home

	Revision 1.30  2005/12/15 15:32:29  beal6226
	Erreur sur weblogic.classpath

	Revision 1.29  2005/12/06 13:11:48  beal6226
	Suppression des warnings Eclipse si weblogic ou JDO ne sont pas installés

	Revision 1.28  2005/11/28 15:41:26  yfve7250
	Ajout du serveur websphere

	Revision 1.27  2005/10/25 15:15:07  beal6226
	Nouveau correctif sur le <path id="project.classpath">
	On a besoin de dist/lib dans le classpath lorsque les modules sont dépendants les uns des autres.
	Pour régler le problème, on retire les clients de web services du classpath (*stub.jar)

	Revision 1.26  2005/10/25 10:59:49  beal6226
	Ajout de l'enhancement JDO pour les projets ayant un fichier versant.properties défini dans env.properties

	Revision 1.25  2005/09/26 08:36:10  beal6226
	Version Axis 1.2.1

	Revision 1.24  2005/09/05 08:56:28  beal6226
	Refonte complète module web services

	Revision 1.23  2005/08/05 14:56:59  yfve7250
	update

	Revision 1.22  2005/08/05 10:23:20  yfve7250
	correctif sur le <path id="project.classpath">
	le dist/lib est supprimer pr eviter les conflits avec les stubs generer et la generation du wsdl

	Revision 1.21  2005/08/05 10:11:24  yfve7250
	correctif sur le <path id="project.classpath">
	le dist/lib est supprimer pr eviter les conflits avec les stubs generer et la generation du wsdl

	Revision 1.20  2005/06/21 13:45:15  yfve7250
	correctif 21/06/2005 15:54

	Revision 1.19  2005/06/15 12:09:09  nieh8376
	*** empty log message ***

	Revision 1.18  2005/06/15 11:37:42  beal6226
	Définition de la tâche PMD dans le setenv plutôt que dans les paramètres de Eclipse

	Revision 1.17  2005/06/08 15:16:43  yfve7250
	changes webservices part of toolkit v1

	Revision 1.16  2005/06/06 08:57:35  nieh8376
	ajout du module bouchon web services + documentation

	Revision 1.15  2005/05/31 07:57:03  nieh8376
	ajout du module web services

	Revision 1.14  2005/05/26 12:14:34  beal6226
	Ajout de tâches de reporting : javadoc, tests junit, PMD

	Revision 1.13  2005/05/23 14:13:02  beal6226
	Ajout d'une tâche javadoc dans le build.xml (version précédente perdue !)

	Revision 1.12  2005/05/20 13:56:40  beal6226
	Ajout des tests junit

	Revision 1.10  2005/05/09 14:39:34  beal6226
	Accents, bug sur xdocletfiles

	Revision 1.9  2005/04/28 16:53:22  beal6226
	Gestion des caractères accentués : encoding="ISO-8859-1" dans tous ls fichiers XML

	Revision 1.8  2005/04/28 16:09:00  beal6226
	Refonte complète - Version finalisée modules ejb, lib, war et ear

-->
<!-- ******************************************** -->
<!-- Configuration dépendant de l'environnement   -->
<!-- ******************************************** -->
<property file="ant/env.properties" />

<!-- ******************************************** -->
<!-- Répertoires internes                         -->
<!-- ******************************************** -->
<property name="src.dir" value="src/java" />
<property name="test.dir" value="src/test" />
<property name="dist.dir" value="dist" />
<property name="lib.dir" value="lib" />
<property name="tmp.dir" value="tmp" />
<property name="ant.includes.dir" value="ant/includes" />
<property name="ant.modules.dir" value="ant/modules" />
<property name="ant.conf.dir" value="ant/conf" />
<property name="j2ee.dir" value="j2ee" />
<property name="generated.dir" value="generated" />
<property name="properties.dir" value="properties" />
<property name="package.dir" value="package_server" />

<property name="toolkit.version" value="G3R2C0" />

<!-- ********************************************* -->
<!-- Classpath utilisés par les différentes target -->
<!-- ********************************************* -->
<!-- Par défaut, on inclut toutes les librairies du projet (dans $lib.dir), plus toutes les librairies
	générées par le toolkit (dans $dist.dir) sauf les clients de web services qui peuvent
	provoquer des conflits à la génération wsdl -->
<path id="project.classpath">
	<fileset dir="${lib.dir}">
		<include name="**/*.jar" />
	</fileset>
	<fileset dir="${dist.dir}">
		<include name="**/*.jar" />
		<exclude name="**/*stub.jar" />
	</fileset>
</path>

<!-- On ajoute les classes de test pour junit -->
<!--  Pour GWT, on a aussi besoin des sources. Ca ne gêne pas pour les autres tests junit -->
<path id="test.classpath">
	<fileset dir="${ant.conf.dir}/test/lib">
		<include name="**/*.jar" />
	</fileset>
	<pathelement
		path="${tmp.dir}/${module.type}/${module.name}/test-classes" />
	<pathelement path="${src.dir}" />
	<pathelement path="${test.dir}" />
	<path refid="project.classpath" />
</path>


<!-- ***************************************************** -->
<!-- TASKDEF Jonas, Weblogic, Xdoclet, PMD, Axis, Bouchon  -->
<!-- ***************************************************** -->
<!-- JONAS ejbjar task  -->
<!-- Jonas est facultatif pour l'utilisation du toolkit -->
<!-- La tâche ejbjar est renommée jonas-ejbjar pour éviter un message de redéfinition -->
<target name="define_jonas">
	<echo message="Définition des taches ant pour jonas" />
	<!-- Valeur par défaut pour le nom du serveur jonas -->
	<property name="jonas.server.name" value="jonas" />
	<!-- Pour supprimer les warnings Eclipse dans le cas où jonas n'est pas
		installé, on affecte une valeur par défaut à jonas.root. Ceci ne
		modifie pas la variable si elle était déjà affectée -->
	<property name="jonas.root" value="." />
	<!-- Toujours pour supprimer les warnings Eclipse, on positionne onerror=report -->
	<taskdef name="jonas-ejbjar"
		classname="org.objectweb.jonas.ant.EjbJar"
		classpath="${jonas.root}/lib/common/ow_jonas_ant.jar"
		onerror="report" />
	<taskdef name="jonas" classname="org.objectweb.jonas.ant.JOnASTask"
		classpath="${jonas.root}/lib/common/ow_jonas_ant.jar"
		onerror="report" />
	<taskdef name="jonas-serverdeploy"
		classname="org.objectweb.jonas.ant.ServerDeploy"
		classpath="${jonas.root}/lib/common/ow_jonas_ant.jar"
		onerror="report" />
</target>

<!-- XDOCLET ejbdoclet task -->
<!-- Xdoclet est obligatoire pour l'utilisation du toolkit, modules ejb -->
<!-- On n'inclut pas le même xjavadoc.jar suivant qu'on est en java 1.4 ou en java 5 -->
<target name="test_xdoclet">
	<condition property="isjava14">
		<or>
			<equals arg1="${java.specification.version}" arg2="1.3" />
			<equals arg1="${java.specification.version}" arg2="1.4" />
		</or>
	</condition>
</target>
<target name="define_xdoclet_java14" depends="test_xdoclet" if="isjava14">
	<echo message="Définition des taches ant pour xdoclet - java 1.3 ou 1.4" />
	<path id="xdoclet.classpath">
		<fileset dir="${ant.conf.dir}/xdoclet/lib">
			<include name="**/*.jar" />
		</fileset>
		<fileset dir="${ant.conf.dir}/xdoclet/lib_java14">
			<include name="**/*.jar" />
		</fileset>
		<path refid="project.classpath" />
	</path>
	<!-- Définition de la tâche ejbdoclet et du classpath associé -->
	<taskdef name="ejbdoclet"
		classname="xdoclet.modules.ejb.EjbDocletTask"
		classpathref="xdoclet.classpath" />
</target>

<target name="define_xdoclet_java5" depends="test_xdoclet" unless="isjava14">
	<echo message="Définition des taches ant pour xdoclet - java 5 ou 6" />
	<path id="xdoclet.classpath">
		<fileset dir="${ant.conf.dir}/xdoclet/lib">
			<include name="**/*.jar" />
		</fileset>
		<fileset dir="${ant.conf.dir}/xdoclet/lib_java5">
			<include name="**/*.jar" />
		</fileset>
		<path refid="project.classpath" />
	</path>
	<!-- Définition de la tâche ejbdoclet et du classpath associé -->
	<taskdef name="ejbdoclet"
		classname="xdoclet.modules.ejb.EjbDocletTask"
		classpathref="xdoclet.classpath" />
</target>

<!-- JUNIT task  -->
<!-- La tâche junit est utilisée pour construire le rapport de tests junit.
	junit est une tâche optionnelle d'Eclipse, ce qui signifie que la déclaration
	de la tâche est déjà faite (dans plugins/org.apache.ant_xxx/lib/ant-junit.jar)
	mais que la librairie nécessaire (junit.jar) n'est pas ajoutée sous Eclipse
	dans le menu Window/Preference/ant/runtime. Le plugin du toolkit ajoute cette
	librairie automatiquement, via l'extension extraClasspathEntries. Attention,
	il faut que eclipseRuntime="false" car ant tourne dans un autre runtime.
	La librairie junit apparait au final dans le menu d'Eclipse
	Windows/Preferences/ant/runtime/Global entries.
	Si le toolkit est utilisé sous Eclipse sans plugin, il faut ajouter junit.jar
	dans Window/Preference/ant/runtime/Global Entries.
	Au final, la tâche junit ne doit pas être déclarée par un taskdef, et ce
	quelque soit l'environnement -->

<target name="define_junit">
	<echo message="Définition des taches ant pour junit" />
	<!-- taskdef name="junit"
		classname="org.apache.tools.ant.taskdefs.optional.junit.JUnitTask"
		classpathref="project.classpath" />
		<taskdef name="junitreport"
		classname="org.apache.tools.ant.taskdefs.optional.junit.XMLResultAggregator"
		classpathref="project.classpath" /-->
</target>

<!-- PMD task  -->
<!-- La tâche pmd est utilisée pour construire le rapport PMD.
	PMD est fourni avec le toolkit pour fonctionner indépendamment d'Eclipse, par
	exemple sous Linux -->
<target name="define_pmd">
	<echo message="Définition des taches ant pour pmd" />
	<path id="pmd.classpath">
		<fileset dir="${ant.conf.dir}/pmd/lib">
			<include name="**/*.jar" />
		</fileset>
		<path refid="project.classpath" />
	</path>
	<taskdef name="pmd" classname="net.sourceforge.pmd.ant.PMDTask"
		classpathref="pmd.classpath" />
</target>

<!-- Axis task  -->
<target name="define_axis">
	<!-- Axis a besoin d'avoir les classes du service web dans son classpath.
		Attention, il semble que l'élément imbriqué "classpath" de la tâche
		axis-wsdl2java ne fonctionne pas.
		Les librairies d'Axis doivent être présentes dans lib -->
	<path id="axis.classpath">
		<pathelement
			location="${tmp.dir}/${module.type}/${module.name}/${package.dir}/WEB-INF/classes" />
		<path refid="project.classpath" />
	</path>

	<!--JAVA2WSDL -->
	<taskdef name="axis-java2wsdl"
		classname="org.apache.axis.tools.ant.wsdl.Java2WsdlAntTask"
		classpathref="axis.classpath" />
	<!--WSDL2JAVA-->
	<taskdef name="axis-wsdl2java"
		classname="org.apache.axis.tools.ant.wsdl.Wsdl2javaAntTask"
		classpathref="axis.classpath" />
</target>

<!-- Bouchon task -->
<!-- Librairies necessaire au generateur de bouchon-->
<!--  Supprimé en G3R1 / G3R2 -->
<!-- target name="define_bouchon">
	<taskdef name="bouchonTask"
		classname="com.ft.ws.simulator.generator.ant.ImplementInterfaceTask"
		classpathref="project.classpath" />
</target-->

<!-- Wsdd task -->
<!-- Librairies necessaire au generateur de bouchon-->
<target name="define_wsdd">
	<path id="wsdd.classpath">
		<fileset dir="${ant.conf.dir}/wsdd/lib">
			<include name="**/*.jar" />
		</fileset>
		<path refid="project.classpath" />
	</path>
	<taskdef name="generateWsddTask"
		classname="com.francetelecom.euralba.GenerateWsddTask"
		classpath="${ant.conf.dir}/wsdd/lib/generateWsddTask.jar" />
</target>

<!-- Wsi task -->
<!-- Librairies necessaire au valideur WS-I -->
<target name="define_wsi">
<!-- On ajoute les classes pour la valideur WS-I -->
<path id="wsi.classpath">
	<fileset dir="${ant.conf.dir}/wsi/lib">
		<include name="**/*.jar" />
	</fileset>
	<path refid="project.classpath" />
</path>
<!--  Pas de tâche spécifique pour wsi, on appelle directement le java -->
</target>

<!-- Weblogic est facultatif pour l'utilisation du toolkit.
	Pour supprimer les warnings Eclipse dans le cas où weblogic n'est pas
	installé, mettre en commentaire les tâches path et taskdef ci-dessous -->
<target name="define_weblogic" if="weblogic.root">
	<echo message="Définition des taches ant pour weblogic" />
	<!-- Pour supprimer les warnings Eclipse dans le cas où weblogic n'est pas
		installé, on affecte une valeur par défaut à weblogic.root. Ceci ne
		modifie pas la variable si elle était déjà affectée -->
	<property name="weblogic.root" value="." />
	<path id="weblogic.classpath">
		<fileset dir="${weblogic.root}">
			<include name="server/lib/weblogic.jar" />
		</fileset>
	</path>
	<!-- Toujours pour supprimer les warnings Eclipse, on positionne onerror=report -->
	<taskdef name="wldeploy"
		classname="weblogic.ant.taskdefs.management.WLDeploy"
		classpathref="weblogic.classpath" onerror="report" />
	<taskdef name="wlappc" classname="weblogic.ant.taskdefs.j2ee.Appc"
		classpathref="weblogic.classpath" onerror="report" />
</target>

<!-- Versant est facultatif pour l'utilisation du toolkit -->
<!-- Pour supprimer les warnings Eclipse dans le cas où versant n'est pas
	installé, on affecte une valeur par défaut à voaplugin.home. Ceci ne
	modifie pas la variable si elle était déjà affectée -->
<!-- Versant a besoin d'avoir le répertoire de destination dans son classpath
	ce répertoire contient les classes à enhancer. Il est placé en PREMIER dans le classpath
	pour passer avant d'éventuelles anciennes classes enhancées placées dans dist/lib -->
<!-- Définition des tâches jdo-* -->
<!--  Supprimé en version 3.2.0 -->
<!--
	<target name="define_jdo" if="voaplugin.home">
		<echo message="Définition des taches ant pour versant" />
		<property name="voaplugin.home" value="." />
		<path id="versant.classpath">
			<pathelement
			location="${tmp.dir}/${module.type}/${module.name}/${package.dir}/${sub.dir}" />
			<path refid="project.classpath" />
			<fileset dir="${voaplugin.home}">
				<include name="lib/*.jar" />
			</fileset>
		</path>
		<taskdef resource="versant.tasks" classpathref="versant.classpath" />
	</target>
-->
<!-- GWT est facultatif pour l'utilisation du toolkit -->
<target name="define_gwt" if="gwt.compile">
	<echo message="Définition des taches ant pour gwt" />
	<!-- Définition des tâches jdo-* -->
	<path id="gwt.classpath">
		<!-- GWT a besoin d'avoir le répertoire de sources dans son classpath
			ce répertoire contient les descriptions XML des modules à compiler.
			Il est placé en PREMIER dans le classpath.
			Les librairies de GWT doivent être présentes dans lib -->

		<pathelement location="${src.dir}" />
		<fileset dir="${ant.conf.dir}/gwt/lib">
			<include name="**/*.jar" />
		</fileset>
		<path refid="project.classpath" />
	</path>
	<taskdef name="gwtcompile"
		classname="com.francetelecom.clara.gwt.tools.AntGWTCompileTask"
		classpathref="gwt.classpath" />
</target>

<!-- Ajout de ant-contrib, utilisé par le déploiement en mode exploded des ear -->
<target name="define_ant-contrib">
	<taskdef resource="net/sf/antcontrib/antcontrib.properties"
	         classpath="${ant.conf.dir}/ant-contrib/lib/ant-contrib-1.0b3.jar" />
</target>


<!-- ******************************************** -->
