<?xml version="1.0" encoding="ISO-8859-1"?>
<!-- CVS History
  $Log: build_lib.xml,v $
  Revision 1.1  2007/08/14 07:55:55  tvzl8571
  TatamiDemo, projet demontrant les differents composants du projet Tatami

  Revision 1.1  2007/05/25 12:27:21  beal6226
  Exemple d'utilisation de GWT avec :
  - Un menu déroulant qui fait apparaitre une popup
  - Un bouton qui fait apparaitre un hello world
  - Des champs de saisie qui modifient dynamiquement un tableau de données.
  - Une utilisation de GWT RPC pour récupérer des données côté serveur (après, c'est bouchonné, il n'y a pas de SGBD).

  Revision 1.2  2006/11/02 13:54:48  beal6226
  Synchronisation avec referentiel plateforme Eclipse

  Revision 1.1  2006/10/10 08:10:37  ajta5630
  Intérgration dans la barre d'outils et le menu du workbench. Intégration de l'aide

  Revision 1.1  2006/03/20 16:31:35  beal6226
  Initial plugin version

  Revision 1.10  2006/03/15 16:49:55  beal6226
  La variable TODAY doit être définie dans le projet où elle est utilisée. Le timestamp est donc placé devant chaque utilisation de TODAY.
  Ajout d'une description aux tâches les plus utiles pour un accès plus facile avec la vue outline d'Eclipse.
  Ajout de doubles traits dans les messages ant pour bien visualiser la fin de construction de chaque module

  Revision 1.9  2006/02/17 14:52:48  beal6226
  Factorisation de la tâche init

  Revision 1.8  2006/01/24 10:50:08  yrka8220
  Ajout du module rar

  Revision 1.7  2005/10/25 11:08:00  beal6226
  Ajout d'attributs Manifest sur jar, war, war-ws et ear

  Revision 1.6  2005/09/05 08:56:28  beal6226
  Refonte complète module web services

  Revision 1.5  2005/06/27 09:34:28  beal6226
  Ajour d'un mkdir war-ws dans dist sur les 5 build_xxx car sinon ça plante

  Revision 1.4  2005/06/10 14:17:19  nieh8376
  coorection de scripts

  Revision 1.3  2005/05/09 14:38:49  beal6226
  Ajout de filesetmanifest sur jar, war et ear

  Revision 1.2  2005/04/28 16:09:00  beal6226
  Refonte complète - Version finalisée modules ejb, lib, war et ear

  -->
<!DOCTYPE project [
		<!ENTITY setenv SYSTEM "../conf/setenv.xml">	
	]>
<project name="build_lib" default="init" basedir="../..">

	<!-- Chargement des propriétés -->
	&setenv;
    <property file="${ant.modules.dir}/${module.type}.${module.name}.properties" />

	<!-- TARGET compile -->
	<!-- Compilation des sources du module dans un répertoire temporaire 
	${tmp.dir}/${module.type}/${module.name}/package. On n'utilise pas le
	répertoire classes de eclipse pour rester indépendant du jdk et de tout paramétrage. -->
	<target name="compile" depends="init" description="compilation librairie">
		<ant antfile="${ant.conf.dir}/common.xml" target="compile_module">
			<property name="sub.dir" value=""/>
		</ant>
		<echo message="Compilation du module ${module.type} ${module.name} terminé" />
	</target>

	<!-- TARGET package -->
	<!-- Le packaging d'un module lib consiste à copier tous les fichiers J2EE dans le 
	répertoire temporaire du module, en remplaçant les variables du type ${variable} par 
	leur valeur pour les fichiers *.template.*.	Ensuite, on package le tout dans un jar. -->
	<target name="package" depends="init" description="packaging librairie">
		<ant antfile="${ant.conf.dir}/common.xml" target="copy_j2ee" />
		<antcall target="jar" />
		<echo message="========== Packaging du module terminé, consulter ${dist.dir}/${module.type}/${module.name}.jar ==========" />
	</target>


	<!-- TARGET jar -->
	<!-- On construit le fichier jar en packageant les fichiers préparés -->
	<target name="jar" description="lancement jar">
		<echo message="Construction du fichier jar ${dist.dir}/${module.type}/${module.name}.jar" />
		<tstamp>
			<format property="TODAY" pattern="d-MMM-yyyy hh:mm:ss aa" locale="en" />
		</tstamp>
		<jar destfile="${dist.dir}/${module.type}/${module.name}.jar"
		     filesetmanifest="merge">
			<fileset dir="${tmp.dir}/${module.type}/${module.name}/${package.dir}">
			</fileset>
			<manifest>
				<attribute name="Release-Date" value="${TODAY}" />
				<attribute name="Created-By"
				           value="${java.vm.version} (${java.vm.vendor})" />
				<attribute name="Company" value="France Telecom" />
				<attribute name="Toolkit-Version" value="${toolkit.version}" />
				<attribute name="Module-Name" value="${module.name}" />
			</manifest>
		</jar>
	</target>

	<!-- TARGET internet init -->
	<!-- Création des répertoires nécessaires au fonctionnement du toolkit -->
	<target name="init">
		<ant antfile="${ant.conf.dir}/common.xml" target="init" />
	</target>

</project>