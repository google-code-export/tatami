<?xml version="1.0" encoding="utf-8" ?>
<project name="Tatami-Demo" default="build" basedir=".">
	<!-- Configure path to GWT SDK -->
	<property file="${basedir}/../tatami-common/env.properties" />

	<!-- SWT on Mac requires the -XstartOFirstThreadFlag. -->
	<condition property="XstartOnFirstThreadFlag" value="-XstartOnFirstThread" else="-Dgwt.dummy.arg1=">
		<os family="mac" />
	</condition>

	<!-- SWT on Mac requires the -d32 flag if the VM is 64-bit. -->
	<condition property="d32Flag" value="-d32" else="-Dgwt.dummy.arg2=">
		<and>
			<os family="mac" />
			<equals arg1="${sun.arch.data.model}" arg2="64" />
		</and>
	</condition>

	<path id="project.src.path">
		<!-- 
		 We want the TatamiJS.jar and not all the JavaScript sources (the property "tatamiJS.src"),
		-->
		<pathelement location="${tatamiJS.lib}/" />
		<!-- we used the sources properties to simplify the developpement of the demo, otherwise each time we need to build all projects before -->
		<pathelement path="${tatamix.src}/" />
		<pathelement path="${tatami.src}/" />
		<pathelement location="src/java" />
   </path>


	<path id="project.class.path">
		<pathelement path="${tatami.classes}/" />
		<pathelement path="${tatamix.classes}/" />
		<pathelement location="war/WEB-INF/classes" />
		<pathelement location="${gwt.sdk}/gwt-user.jar" />
		<fileset dir="${gwt.sdk}" includes="gwt-dev*.jar" />
		<!-- Add any additional non-server libs (such as JUnit) -->
		<fileset dir="war/WEB-INF/lib" includes="**/*.jar" />
	</path>

	<target name="libs" description="Copy libs to WEB-INF/lib">
		<mkdir dir="war/WEB-INF/lib" />
		<copy todir="war/WEB-INF/lib" file="${gwt.sdk}/gwt-servlet.jar" />
		<!-- Add any additional server libs that need to be copied -->
	</target>

	<target name="javac" depends="libs" description="Compile java source">
		<mkdir dir="war/WEB-INF/classes" />
		<javac srcdir="src/java" includes="**" encoding="utf-8" destdir="war/WEB-INF/classes" source="1.5" target="1.5" nowarn="true" debug="true" debuglevel="lines,vars,source">
			<classpath refid="project.class.path" />
		</javac>
		<copy todir="war/WEB-INF/classes">
			<fileset dir="src/java" excludes="**/*.java" />
		</copy>
	</target>

	<target name="gwtc" depends="javac" description="GWT compile to JavaScript">
		<java failonerror="true" fork="true" classname="com.google.gwt.dev.Compiler">
			<classpath>
				<path refid="project.src.path" />
				<path refid="project.class.path" />
			</classpath>
			<!-- add jvmarg -Xss16M or similar if you see a StackOverflowError -->
			<jvmarg value="-Xmx256M" />
			<jvmarg value="${XstartOnFirstThreadFlag}" />
			<jvmarg value="${d32Flag}" />
			<!-- Additional arguments like -style PRETTY or -logLevel DEBUG -->
			<arg value="com.objetdirect.tatami.demo.TatamiDemo" />
		</java>
	</target>

	<target name="hosted" depends="javac" description="Run hosted mode">
		<java failonerror="true" fork="true" classname="com.google.gwt.dev.HostedMode">
			<classpath>
				<path refid="project.src.path" />
				<path refid="project.class.path" />
			</classpath>
			<jvmarg value="-Xmx256M" />
			<jvmarg value="${XstartOnFirstThreadFlag}" />
			<jvmarg value="${d32Flag}" />
			<arg value="-startupUrl" />
			<arg value="index.html" />
			<!-- Additional arguments like -style PRETTY or -logLevel DEBUG -->
			<arg value="com.objetdirect.tatami.demo.TatamiDemo" />
		</java>
	</target>

	<target name="eclipse.generate" depends="libs" description="Generate eclipse project">
		<java failonerror="true" fork="true" classname="com.google.gwt.user.tools.WebAppCreator">
			<classpath>
				<path refid="project.class.path" />
			</classpath>
			<arg value="-XonlyEclipse" />
			<arg value="-ignore" />
			<arg value="com.objetdirect.tatami.demo.TatamiDemo" />
		</java>
	</target>

	<target name="build" depends="gwtc" description="Build this project" />

	<target name="war" depends="build" description="Create a war file">
		<zip destfile="TatamiDemo.war" basedir="war" />
	</target>

	<target name="clean" description="Cleans this project">
		<delete dir="war/WEB-INF/classes" failonerror="false" />
		<delete dir="war/TatamiDemo" failonerror="false" />
	</target>

</project>
